package Vue;

import Beans.*;
import Model.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author toshiba
 */
public class Employes extends javax.swing.JPanel {

    /**
     * Creates new form Enseignant
     */
    Connexion c = new Connexion();
    Statement stat;
    PreparedStatement prestate;
    ResultSet rs;
    DefaultTableModel dtm = new DefaultTableModel();

    public Employes() {
        initComponents();
        actualiser();
        pmodifier.setVisible(false);
        bsuuprimer.setVisible(false);

    }

    public static void reinitialiser() {
        tnom.setText(null);
        tprenom.setText(null);
        cmrole.setSelectedItem("Couturier(e)");

        // tnom.requestFocus();
    }

    public void actualiser() {
        //vider la table
        dtm.setColumnCount(0);
        dtm.setRowCount(0);
        try {
            stat = c.getCo().createStatement();
            rs = stat.executeQuery("select * from employes");
            dtm.addColumn("identifiant");
            dtm.addColumn("nom");
            dtm.addColumn("prenom");
            dtm.addColumn("role");

            while (rs.next()) {
                dtm.addRow(new Object[]{
                    rs.getInt("id"), rs.getString("nom"), rs.getString("prenom"), rs.getString("role")
                });
            }
            tabens.setModel(dtm);
            reinitialiser();
            pmodifier.setVisible(false);
            bsuuprimer.setVisible(false);

        } catch (SQLException ex) {
            Logger.getLogger(Employes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void afficher(int nligne) {
        tnom.setText(tabens.getValueAt(nligne, 1).toString());
        tprenom.setText(tabens.getValueAt(nligne, 2).toString());
        cmrole.setSelectedItem(tabens.getValueAt(nligne, 3).toString());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        penseignanat = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tnom = new javax.swing.JTextField();
        tprenom = new javax.swing.JTextField();
        bsuuprimer = new javax.swing.JButton();
        pmodifier = new javax.swing.JButton();
        bajouter = new javax.swing.JButton();
        bactu = new javax.swing.JButton();
        cmrole = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabens = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        trecherche = new javax.swing.JTextField();
        brecherche1 = new javax.swing.JButton();
        cmchoix = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(770, 550));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(770, 530));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        penseignanat.setBackground(new java.awt.Color(255, 255, 255));
        penseignanat.setPreferredSize(new java.awt.Dimension(770, 530));
        penseignanat.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(247, 242, 235));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Nom:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel3.setText("Prenom:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel4.setText("Role :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, -1, -1));

        tnom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tnomActionPerformed(evt);
            }
        });
        tnom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tnomFocusLost(evt);
            }
        });
        jPanel1.add(tnom, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 220, 30));

        tprenom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tprenomFocusLost(evt);
            }
        });
        jPanel1.add(tprenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 220, 30));

        bsuuprimer.setBackground(new java.awt.Color(51, 78, 172));
        bsuuprimer.setForeground(new java.awt.Color(255, 255, 255));
        bsuuprimer.setText("Supprimer");
        bsuuprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsuuprimerActionPerformed(evt);
            }
        });
        jPanel1.add(bsuuprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 90, 30));

        pmodifier.setBackground(new java.awt.Color(51, 78, 172));
        pmodifier.setForeground(new java.awt.Color(255, 255, 255));
        pmodifier.setText("Modifier");
        pmodifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pmodifierActionPerformed(evt);
            }
        });
        jPanel1.add(pmodifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 90, 30));

        bajouter.setBackground(new java.awt.Color(51, 78, 172));
        bajouter.setForeground(new java.awt.Color(255, 255, 255));
        bajouter.setText("Ajouter");
        bajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bajouterActionPerformed(evt);
            }
        });
        jPanel1.add(bajouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 90, 30));

        bactu.setBackground(new java.awt.Color(51, 78, 172));
        bactu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ihm/refresh_3_fill.png"))); // NOI18N
        bactu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bactuActionPerformed(evt);
            }
        });
        jPanel1.add(bactu, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 50, 30));

        cmrole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patronneuse", "Modeliste", "Couturier(e)", "Responsable de Production", "autre" }));
        jPanel1.add(cmrole, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 190, 30));

        penseignanat.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 730, 180));

        tabens.setGridColor(new java.awt.Color(0, 102, 255));
        tabens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabensMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabens);

        penseignanat.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 730, 230));

        jPanel2.setBackground(new java.awt.Color(196, 227, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ihm/employes.jpg"))); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 70));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(8, 31, 92));
        jLabel1.setText("GESTION DES EMPLOYES ");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 22, -1, 30));

        trecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trechercheActionPerformed(evt);
            }
        });
        trecherche.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                trechercheFocusGained(evt);
            }
        });
        jPanel2.add(trecherche, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 20, 120, 30));

        brecherche1.setBackground(new java.awt.Color(51, 78, 172));
        brecherche1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ihm/search_2_fill (1).png"))); // NOI18N
        brecherche1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brecherche1ActionPerformed(evt);
            }
        });
        jPanel2.add(brecherche1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 20, -1, 30));

        cmchoix.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "id ", "nom" }));
        cmchoix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmchoixActionPerformed(evt);
            }
        });
        jPanel2.add(cmchoix, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 20, -1, 30));

        jLabel7.setText("recherche par ");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, -1, -1));

        penseignanat.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 70));

        add(penseignanat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 1, 770, 550));
    }// </editor-fold>//GEN-END:initComponents

    private void tnomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tnomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tnomActionPerformed

    private void tnomFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tnomFocusLost
        if (tnom.getText() != "") {
            tnom.setText(tnom.getText().toUpperCase());
        }

    }//GEN-LAST:event_tnomFocusLost

    private void tprenomFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tprenomFocusLost
        boolean vide = false;
        if (tprenom.getText().equals("")) {
            vide = true;
        }
        if (vide == false) {
            tprenom.setText((tprenom.getText().charAt(0) + "").toUpperCase()
                    + tprenom.getText().substring(1).toLowerCase());
        }

    }//GEN-LAST:event_tprenomFocusLost

    private void bajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bajouterActionPerformed
        boolean vide = false;

        // recuperer les donnees du formulaire
        String nom = tnom.getText();
        String prenom = tprenom.getText();
        String role = cmrole.getSelectedItem().toString();

        Pattern pattern = Pattern.compile("[^a-zA-Z]");
        Matcher matchernom = pattern.matcher(nom);
        Matcher matcherprenom = pattern.matcher(prenom);

        if (nom.equals("") || prenom.equals("")) {
            vide = true;
        }

        if (vide == false) {
            if (matchernom.find() || matcherprenom.find()) {

                JOptionPane.showMessageDialog(null, "la saisie n'est pas valide");
            } else {
                Employe emp = new Employe();
                emp.setNom(nom);
                emp.setPrenom(prenom);
                emp.setrole(role);
                ConnectEmployes cme = new ConnectEmployes();
                boolean employeExiste = false;
                try {
                    while (cme.rs.next()) {
                        if (nom.equals(cme.rs.getString("nom")) && prenom.equals(cme.rs.getString("prenom"))) {
                            employeExiste = true;
                            break;
                        }}
                    if (!employeExiste) {
                          stat = c.getCo().createStatement();
                        stat.executeUpdate("INSERT INTO employes(nom,prenom,role) VALUES('"
                                + emp.getNom() + "','" + emp.getPrenom() + "','" + emp.getrole() + "')");
                        JOptionPane.showMessageDialog(null, "employes ajouter avec succes");
                        actualiser();
                        reinitialiser();
                    }else {
                    JOptionPane.showMessageDialog(null, "L'employes existe déjà");
                }
                      

                    }catch (SQLException ex) {
                    Logger.getLogger(Employes.class.getName()).log(Level.SEVERE, null, ex);
                }

                }

            }else {
            JOptionPane.showMessageDialog(null, "Vous devez remplir tous les champs");
        }
            pmodifier.setVisible(false);
            bsuuprimer.setVisible(false);


    }//GEN-LAST:event_bajouterActionPerformed

    private void tabensMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabensMouseClicked
        afficher(tabens.getSelectedRow());
        pmodifier.setVisible(true);
        bsuuprimer.setVisible(true);
    }//GEN-LAST:event_tabensMouseClicked

    private void bsuuprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsuuprimerActionPerformed
        if (JOptionPane.showConfirmDialog(this, "voulez vous vraiment supprimer ?", "suppression", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                stat = c.getCo().createStatement();
                stat.executeUpdate("DELETE FROM employes WHERE id='" + tabens.getValueAt(tabens.getSelectedRow(), 0) + "'");
                JOptionPane.showMessageDialog(this, "suppression faite avec succes");
                actualiser();

                reinitialiser();
            } catch (SQLException ex) {
                Logger.getLogger(Employes.class.getName()).log(Level.SEVERE, null, ex);
            }
            pmodifier.setVisible(false);
            bsuuprimer.setVisible(false);
        }
    }//GEN-LAST:event_bsuuprimerActionPerformed

    private void pmodifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pmodifierActionPerformed
        if (JOptionPane.showConfirmDialog(this, "voullez vous vraiment modifier ?", "modification",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            String nom = tnom.getText();
            String prenom = tprenom.getText();
            String role = cmrole.getSelectedItem().toString();
            boolean vide = false;
            Pattern pattern = Pattern.compile("[^a-zA-Z]");
            Matcher matchernom = pattern.matcher(nom);
            Matcher matcherprenom = pattern.matcher(prenom);
            if (nom.equals("") || prenom.equals("")) {
                vide = true;
            }
            if (vide == false) {
                if (matchernom.find() || matcherprenom.find()) {

                    JOptionPane.showMessageDialog(null, "la saisie n'est pas valide");
                } else {
                    try {
                        prestate = c.getCo().prepareStatement("UPDATE employes SET nom=?,"
                                + "prenom=?,role=? WHERE id=?");
                        prestate.setString(1, nom);
                        prestate.setString(2, prenom);
                        prestate.setString(3, role);

                        prestate.setInt(4, Integer.parseInt(tabens.getValueAt(tabens.getSelectedRow(), 0) + ""));
                        prestate.execute();
                        JOptionPane.showMessageDialog(this, "Modification faite avec succes");
                        actualiser();
                        reinitialiser();
                    } catch (SQLException ex) {
                        Logger.getLogger(Employes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    pmodifier.setVisible(false);
                    bsuuprimer.setVisible(false);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Vous devez remplir tous les champs");
            }

        }
    }//GEN-LAST:event_pmodifierActionPerformed

    private void cmchoixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmchoixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmchoixActionPerformed

    private void trechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trechercheActionPerformed

    private void trechercheFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_trechercheFocusGained
        dtm.setColumnCount(0);
        dtm.setRowCount(0);
        trecherche.setText(null);
        reinitialiser();
        actualiser();
        trecherche.requestFocus();

    }//GEN-LAST:event_trechercheFocusGained

    private void brecherche1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brecherche1ActionPerformed
        String s;
        s = cmchoix.getSelectedItem().toString();
        try {

            prestate = c.getCo().prepareStatement("SELECT * FROM employes WHERE " + s + "=?");
            if (s.equals("id")) {
                prestate.setInt(1, Integer.parseInt(trecherche.getText()));
            } else {
                prestate.setString(1, trecherche.getText().toUpperCase());
            }

            rs = prestate.executeQuery();
            dtm.setRowCount(0);
            while (rs.next()) {
                dtm.addRow(new Object[]{rs.getInt("id"), rs.getString("nom"), rs.getString("prenom"), rs.getString("role")});
            }
            tabens.setModel(dtm);
            if (dtm.getRowCount() != 0) {
                afficher(0);
            } else {
                actualiser();
                JOptionPane.showMessageDialog(this, "l'employe n'existe pas");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Employes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_brecherche1ActionPerformed

    private void bactuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bactuActionPerformed
        actualiser();
        reinitialiser();
    }//GEN-LAST:event_bactuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bactu;
    public javax.swing.JButton bajouter;
    private javax.swing.JButton brecherche1;
    private javax.swing.JButton bsuuprimer;
    private javax.swing.JComboBox<String> cmchoix;
    public static javax.swing.JComboBox<String> cmrole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    public javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel penseignanat;
    private javax.swing.JButton pmodifier;
    private javax.swing.JTable tabens;
    public static javax.swing.JTextField tnom;
    public static javax.swing.JTextField tprenom;
    private javax.swing.JTextField trecherche;
    // End of variables declaration//GEN-END:variables
}
