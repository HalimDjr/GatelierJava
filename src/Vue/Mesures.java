/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vue;

import Model.Connexion;
import static Vue.Commande.jmi;
import static Vue.Commande.tclientId;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author toshiba
 */
public class Mesures extends javax.swing.JPanel {

    ListeDesClients lc = new ListeDesClients();
    PreparedStatement ps;
    Connexion co = new Connexion();
    DefaultTableModel dtm = new DefaultTableModel();
    Statement stat;
    ResultSet rs;

    /**
     * Creates new form Mesures
     */
    public Mesures() {
        initComponents();
        actualiser();
        reinitialiser();
    }

    public void reinitialiser() {

        tclientId.setText("");
        tnom.setVisible(false);
        tnom.setText(null);
        tprenom.setVisible(false);
        tprenom.setText(null);
        ttail.setText(null);
        tpoitrine.setText(null);
        tbassin.setText(null);
        lvmesures.setVisible(false);
        bmodifier.setVisible(false);
        bsupprimer.setVisible(false);

    }

    public void actualiser() {
        //vider la table
        dtm.setColumnCount(0);
        dtm.setRowCount(0);
        try {
            stat = co.getCo().createStatement();
            rs = stat.executeQuery("select * from mesures");
            dtm.addColumn("identifiant");
            dtm.addColumn("tour tail");
            dtm.addColumn("tour poitrine");
            dtm.addColumn("tour basin");
            dtm.addColumn("id client");

            while (rs.next()) {
                dtm.addRow(new Object[]{
                    rs.getInt("id"), rs.getString("poitrine"), rs.getString("tail"), rs.getInt("bassin"), rs.getString("id_client")
                });
            }
            tabmesures.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(Mesures.class.getName()).log(Level.SEVERE, null, ex);
        }
        lvmesures.setVisible(false);
    }

    public void afficher(int nligne) {
        ttail.setText(tabmesures.getValueAt(nligne, 1).toString());
        tpoitrine.setText(tabmesures.getValueAt(nligne, 2).toString());
        tbassin.setText(tabmesures.getValueAt(nligne, 3).toString());
        tclientId.setText(tabmesures.getValueAt(nligne, 4).toString());

        try {
            stat = co.getCo().createStatement();
            rs = stat.executeQuery("SELECT nom,prenom FROM clients WHERE id=" + Integer.parseInt(tabmesures.getValueAt(nligne, 4).toString()));

            if (rs.next()) {

                // Si le ResultSet contient des lignes, récupérez les données
                tnom.setText(rs.getString("nom"));
                tprenom.setText(rs.getString("prenom"));
                tnom.setVisible(true);
                tprenom.setVisible(true);

                lcnom.setVisible(true);
                lcprenom.setVisible(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Mesures.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        pinput = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        bmodifier = new javax.swing.JButton();
        pclient = new javax.swing.JPanel();
        pnom = new javax.swing.JPanel();
        tnom = new javax.swing.JLabel();
        pid = new javax.swing.JPanel();
        tclientId = new javax.swing.JLabel();
        pprenom = new javax.swing.JPanel();
        tprenom = new javax.swing.JLabel();
        lcid = new javax.swing.JLabel();
        lcnom = new javax.swing.JLabel();
        lcprenom = new javax.swing.JLabel();
        bsupprimer = new javax.swing.JButton();
        selectclient = new javax.swing.JLabel();
        bajouter = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        ttail = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        tpoitrine = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        tbassin = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabmesures = new javax.swing.JTable();
        lvmesures = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        cmchoix = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        trecherche = new javax.swing.JTextField();
        brecherche = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setMinimumSize(new java.awt.Dimension(770, 550));
        setPreferredSize(new java.awt.Dimension(770, 550));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pinput.setBackground(new java.awt.Color(255, 255, 255));
        pinput.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton5.setBackground(new java.awt.Color(51, 78, 172));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ihm/refresh_3_fill.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        pinput.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 10, 50, 30));

        bmodifier.setBackground(new java.awt.Color(51, 78, 172));
        bmodifier.setForeground(new java.awt.Color(255, 255, 255));
        bmodifier.setText("Modifier");
        bmodifier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bmodifierMouseClicked(evt);
            }
        });
        pinput.add(bmodifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, -1, 30));

        pclient.setBackground(new java.awt.Color(208, 227, 255));
        pclient.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pclient.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnom.setBackground(new java.awt.Color(255, 255, 255));

        tnom.setText("............");
        pnom.add(tnom);

        pclient.add(pnom, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 150, 30));

        pid.setBackground(new java.awt.Color(255, 255, 255));

        tclientId.setText("............");
        pid.add(tclientId);

        pclient.add(pid, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 150, 30));

        pprenom.setBackground(new java.awt.Color(255, 255, 255));

        tprenom.setText("............");
        pprenom.add(tprenom);

        pclient.add(pprenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 150, 30));

        lcid.setText("Id :");
        pclient.add(lcid, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        lcnom.setText("nom :");
        pclient.add(lcnom, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        lcprenom.setText("Prenom :");
        pclient.add(lcprenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        pinput.add(pclient, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 240, 180));

        bsupprimer.setBackground(new java.awt.Color(51, 78, 172));
        bsupprimer.setForeground(new java.awt.Color(255, 255, 255));
        bsupprimer.setText("Supprimer");
        bsupprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bsupprimerMouseClicked(evt);
            }
        });
        bsupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsupprimerActionPerformed(evt);
            }
        });
        pinput.add(bsupprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, -1, 30));

        selectclient.setBackground(new java.awt.Color(204, 204, 255));
        selectclient.setForeground(new java.awt.Color(51, 78, 172));
        selectclient.setText("+ selectionner");
        selectclient.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        selectclient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectclientMouseClicked(evt);
            }
        });
        pinput.add(selectclient, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        bajouter.setBackground(new java.awt.Color(51, 78, 172));
        bajouter.setForeground(new java.awt.Color(255, 255, 255));
        bajouter.setText("Ajouter");
        bajouter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bajouterMouseClicked(evt);
            }
        });
        bajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bajouterActionPerformed(evt);
            }
        });
        pinput.add(bajouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, 30));

        jPanel2.setBackground(new java.awt.Color(112, 150, 209));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ihm/potrine.jpg"))); // NOI18N
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 120, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ihm/bassin.jpg"))); // NOI18N
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 120, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ihm/tail.jpg"))); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 120, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 102, 255), null));

        jLabel12.setText("cm");

        ttail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ttailActionPerformed(evt);
            }
        });
        ttail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ttailFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(ttail, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ttail, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 120, -1));

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 102, 255), null));

        tpoitrine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tpoitrineMouseClicked(evt);
            }
        });
        tpoitrine.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tpoitrineFocusGained(evt);
            }
        });

        jLabel11.setText("cm");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(tpoitrine, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tpoitrine, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 120, -1));

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 102, 255), null));

        tbassin.setCaretColor(new java.awt.Color(255, 255, 255));
        tbassin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbassinMouseClicked(evt);
            }
        });
        tbassin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tbassinFocusGained(evt);
            }
        });

        jLabel10.setText("cm");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(tbassin, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tbassin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, 120, -1));

        pinput.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 490, 180));

        jLabel4.setText("Client :");
        pinput.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        tabmesures.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabmesures.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabmesuresMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabmesures);

        pinput.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 750, 180));

        lvmesures.setForeground(new java.awt.Color(255, 0, 0));
        lvmesures.setText("les mesures sont incorrectes");
        pinput.add(lvmesures, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 280, -1));

        jPanel1.add(pinput, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 770, 480));

        jPanel8.setBackground(new java.awt.Color(77, 143, 240));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmchoix.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "id ", "id_client" }));
        cmchoix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmchoixActionPerformed(evt);
            }
        });
        jPanel8.add(cmchoix, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 20, -1, 30));

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("recherche par ");
        jPanel8.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, -1, -1));

        trecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trechercheActionPerformed(evt);
            }
        });
        trecherche.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                trechercheFocusGained(evt);
            }
        });
        jPanel8.add(trecherche, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, 120, 30));

        brecherche.setBackground(new java.awt.Color(51, 78, 172));
        brecherche.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ihm/search_2_fill (1).png"))); // NOI18N
        brecherche.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                brechercheMouseClicked(evt);
            }
        });
        brecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brechercheActionPerformed(evt);
            }
        });
        jPanel8.add(brecherche, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, -1, 30));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ihm/22222.jpg"))); // NOI18N
        jPanel8.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -9, 280, 90));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MESURES ");
        jPanel8.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, -1, -1));

        jPanel1.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 770, 70));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 770, 550));
    }// </editor-fold>//GEN-END:initComponents

    private void selectclientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectclientMouseClicked
        lc.setVisible(true);

    }//GEN-LAST:event_selectclientMouseClicked

    private void bajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bajouterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bajouterActionPerformed

    private void bsupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsupprimerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bsupprimerActionPerformed

    private void ttailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ttailActionPerformed

    }//GEN-LAST:event_ttailActionPerformed

    private void cmchoixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmchoixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmchoixActionPerformed

    private void trechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trechercheActionPerformed

    private void trechercheFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_trechercheFocusGained
        reinitialiser();
    }//GEN-LAST:event_trechercheFocusGained

    private void brechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brechercheActionPerformed

    }//GEN-LAST:event_brechercheActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        actualiser();
        reinitialiser();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void bajouterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bajouterMouseClicked
        boolean vmesures = true;
        boolean vide = false;
        String cl_id = tclientId.getText();
        String spoitrine = tpoitrine.getText();
        String stail = ttail.getText();
        String sbassin = tbassin.getText();
        Pattern pattern = Pattern.compile("[^0-9]");
        Matcher matcherP = pattern.matcher(spoitrine);
          Matcher matcherT = pattern.matcher(stail);
            Matcher matcherB = pattern.matcher(sbassin);

        if (cl_id.equals("") || spoitrine.equals("") || stail.equals("") || sbassin.equals("")) {
            vide = true;
        }
        if (vide == false) {
            if (matcherP.find() || matcherT.find() || matcherB.find()) {
                JOptionPane.showMessageDialog(null, "la saisie n'est pas valide");
            }else{
             int poitrine = Integer.parseInt(spoitrine);
            int tail = Integer.parseInt(stail);
            int bassin = Integer.parseInt(sbassin);
            if ((poitrine > 120 || poitrine < 70) || (tail > 120 || tail < 60) || (bassin > 120 || bassin < 70)) {
                vmesures = false;
            }
            if (vmesures) {
                 try {
                ps = co.getCo().prepareStatement("UPDATE mesures SET poitrine=?,tail=?,bassin=?,"
                        + "id_client=? WHERE id=?");
                ps.setInt(1, Integer.parseInt(tpoitrine.getText()));
                ps.setInt(2, Integer.parseInt(ttail.getText()));
                ps.setInt(3, Integer.parseInt(tbassin.getText()));
                ps.setInt(4, Integer.parseInt(tclientId.getText()));
                ps.setInt(5, Integer.parseInt(tabmesures.getValueAt(tabmesures.getSelectedRow(), 0) + ""));
                ps.execute();
                JOptionPane.showMessageDialog(this, "Modification faite avec succes");
                actualiser();
                reinitialiser();
            } catch (SQLException ex) {
                Logger.getLogger(Mesures.class.getName()).log(Level.SEVERE, null, ex);
            }
            } else {
                lvmesures.setVisible(true);
            }}
           
        } else {
            JOptionPane.showMessageDialog(null, "Vous devez remplir tous les champs");
        }


    }//GEN-LAST:event_bajouterMouseClicked

    private void tabmesuresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabmesuresMouseClicked
        afficher(tabmesures.getSelectedRow());
        bmodifier.setVisible(true);
        bsupprimer.setVisible(true);
        tclientId.setVisible(true);
    }//GEN-LAST:event_tabmesuresMouseClicked

    private void bmodifierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bmodifierMouseClicked
        if (JOptionPane.showConfirmDialog(this, "voullez vous vraiment modifier ?", "modification",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
           
        }
         boolean vmesures = true;
        boolean vide = false;
        String cl_id = tclientId.getText();
        String spoitrine = tpoitrine.getText();
        String stail = ttail.getText();
        String sbassin = tbassin.getText();
        Pattern pattern = Pattern.compile("[^0-9]");
        Matcher matcherP = pattern.matcher(spoitrine);
          Matcher matcherT = pattern.matcher(stail);
            Matcher matcherB = pattern.matcher(sbassin);

        if (cl_id.equals("") || spoitrine.equals("") || stail.equals("") || sbassin.equals("")) {
            vide = true;
        }
        if (vide == false) {
            if (matcherP.find() || matcherT.find() || matcherB.find()) {
                JOptionPane.showMessageDialog(null, "la saisie n'est pas valide");
            }else{
             int poitrine = Integer.parseInt(spoitrine);
            int tail = Integer.parseInt(stail);
            int bassin = Integer.parseInt(sbassin);
            if ((poitrine > 120 || poitrine < 70) || (tail > 120 || tail < 60) || (bassin > 120 || bassin < 70)) {
                vmesures = false;
            }
            if (vmesures) {
                try {
                    ps = co.getCo().prepareStatement("INSERT INTO mesures (poitrine,tail,bassin,id_client) VALUES(?,?,?,?)");

                    ps.setInt(1, poitrine);
                    ps.setInt(2, tail);
                    ps.setInt(3, bassin);
                    ps.setInt(4, Integer.parseInt(tclientId.getText()));

                    ps.execute();
                    JOptionPane.showMessageDialog(null, "Mesure ajouter avec succes");
                    reinitialiser();
                    actualiser();

                } catch (SQLException ex) {
                    Logger.getLogger(Mesures.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                lvmesures.setVisible(true);
            }}
           
        } else {
            JOptionPane.showMessageDialog(null, "Vous devez remplir tous les champs");
        }


    }//GEN-LAST:event_bmodifierMouseClicked

    private void bsupprimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bsupprimerMouseClicked
        if (JOptionPane.showConfirmDialog(this, "voulez vous vraiment supprimer ?", "suppression", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                stat = co.getCo().createStatement();
                stat.executeUpdate("DELETE FROM mesures WHERE id='" + tabmesures.getValueAt(tabmesures.getSelectedRow(), 0) + "'");
                JOptionPane.showMessageDialog(this, "suppression faite avec succes");
                actualiser();

                reinitialiser();
            } catch (SQLException ex) {
                Logger.getLogger(Mesures.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_bsupprimerMouseClicked

    private void tpoitrineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tpoitrineMouseClicked

    }//GEN-LAST:event_tpoitrineMouseClicked

    private void tbassinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbassinMouseClicked

    }//GEN-LAST:event_tbassinMouseClicked

    private void ttailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ttailFocusGained
        lvmesures.setVisible(false);
    }//GEN-LAST:event_ttailFocusGained

    private void tpoitrineFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tpoitrineFocusGained
        lvmesures.setVisible(false);
    }//GEN-LAST:event_tpoitrineFocusGained

    private void tbassinFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbassinFocusGained
        lvmesures.setVisible(false);
    }//GEN-LAST:event_tbassinFocusGained

    private void brechercheMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_brechercheMouseClicked
        String s;
        s = cmchoix.getSelectedItem().toString();
        try {

            ps = co.getCo().prepareStatement("SELECT * FROM mesures WHERE " + s + "=?");
            ps.setInt(1, Integer.parseInt(trecherche.getText()));

            rs = ps.executeQuery();
            dtm.setRowCount(0);
            while (rs.next()) {
                dtm.addRow(new Object[]{rs.getInt("id"), rs.getString("poitrine"), rs.getString("tail"), rs.getInt("bassin"), rs.getString("id_client")});

            }
            tabmesures.setModel(dtm);
            if (dtm.getRowCount() != 0) {
                afficher(0);
            } else {
                actualiser();
                JOptionPane.showMessageDialog(this, "mesure n'existe pas");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Mesures.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_brechercheMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bajouter;
    private javax.swing.JButton bmodifier;
    private javax.swing.JButton brecherche;
    private javax.swing.JButton bsupprimer;
    private javax.swing.JComboBox<String> cmchoix;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lcid;
    private javax.swing.JLabel lcnom;
    private javax.swing.JLabel lcprenom;
    private javax.swing.JLabel lvmesures;
    private javax.swing.JPanel pclient;
    private javax.swing.JPanel pid;
    private javax.swing.JPanel pinput;
    private javax.swing.JPanel pnom;
    private javax.swing.JPanel pprenom;
    private javax.swing.JLabel selectclient;
    private javax.swing.JTable tabmesures;
    private javax.swing.JTextField tbassin;
    public static javax.swing.JLabel tclientId;
    public static javax.swing.JLabel tnom;
    private javax.swing.JTextField tpoitrine;
    public static javax.swing.JLabel tprenom;
    private javax.swing.JTextField trecherche;
    private javax.swing.JTextField ttail;
    // End of variables declaration//GEN-END:variables
}
