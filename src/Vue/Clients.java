package Vue;

import Beans.*;
import Model.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author toshiba
 */
public class Clients extends javax.swing.JPanel {

    /**
     * Creates new form Enseignant
     */
    Connexion c = new Connexion();
    Statement stat;
    PreparedStatement prestate;
    ResultSet rs;
    DefaultTableModel dtm = new DefaultTableModel();

    public Clients() {
        initComponents();
        actualiser();
        pmodifier.setVisible(false);
        bsuuprimer.setVisible(false);
        tvage.setVisible(false);

    }

    public static void reinitialiser() {
        tnom.setText(null);
        tprenom.setText(null);
        tage1.setText(null);
        cmsex.setSelectedItem("homme");
        tadresse.setText(null);
        // tnom.requestFocus();
        tvage.setVisible(false);
    }

    public void actualiser() {
        //vider la table
        dtm.setColumnCount(0);
        dtm.setRowCount(0);
        try {
            stat = c.getCo().createStatement();
            rs = stat.executeQuery("select * from clients");
            dtm.addColumn("identifiant");
            dtm.addColumn("nom");
            dtm.addColumn("prenom");
            dtm.addColumn("age");
            dtm.addColumn("sex");
            dtm.addColumn("adresse");
            while (rs.next()) {
                dtm.addRow(new Object[]{
                    rs.getInt("id"), rs.getString("nom"), rs.getString("prenom"), rs.getInt("age"), rs.getString("sex"), rs.getString("adresse")
                });
            }
            tabens.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(Clients.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void afficher(int nligne) {
        tnom.setText(tabens.getValueAt(nligne, 1).toString());
        tprenom.setText(tabens.getValueAt(nligne, 2).toString());
        tage1.setText(tabens.getValueAt(nligne, 3).toString());
        cmsex.setSelectedItem(tabens.getValueAt(nligne, 4));
        tadresse.setText(tabens.getValueAt(nligne, 5).toString());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        penseignanat = new javax.swing.JPanel();
        pfichec = new javax.swing.JPanel();
        tnom = new javax.swing.JTextField();
        tprenom = new javax.swing.JTextField();
        tage1 = new javax.swing.JTextField();
        tadresse = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cmsex = new javax.swing.JComboBox<>();
        bsuuprimer = new javax.swing.JButton();
        pmodifier = new javax.swing.JButton();
        bajouter = new javax.swing.JButton();
        tvage = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        trecherche = new javax.swing.JTextField();
        brecherche = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        cmchoix = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabens = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(630, 336));

        penseignanat.setBackground(new java.awt.Color(255, 255, 255));
        penseignanat.setMinimumSize(new java.awt.Dimension(770, 550));
        penseignanat.setPreferredSize(new java.awt.Dimension(770, 550));
        penseignanat.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pfichec.setBackground(new java.awt.Color(247, 242, 235));
        pfichec.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pfichec.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tnom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tnomFocusLost(evt);
            }
        });
        pfichec.add(tnom, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 180, 30));

        tprenom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tprenomFocusLost(evt);
            }
        });
        pfichec.add(tprenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 180, 30));

        tage1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tage1FocusGained(evt);
            }
        });
        pfichec.add(tage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 180, 30));

        tadresse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tadresseActionPerformed(evt);
            }
        });
        pfichec.add(tadresse, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, 180, 30));

        jLabel9.setText("Nom");
        pfichec.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLabel10.setText("Prenom");
        pfichec.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jLabel11.setText("age");
        pfichec.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, -1, -1));

        jLabel12.setText("sex");
        pfichec.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, -1, -1));

        jLabel13.setText("Adresse");
        pfichec.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 40, -1, -1));

        cmsex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "homme", "femme" }));
        pfichec.add(cmsex, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, 180, 30));

        bsuuprimer.setBackground(new java.awt.Color(51, 78, 172));
        bsuuprimer.setForeground(new java.awt.Color(255, 255, 255));
        bsuuprimer.setText("Supprimer");
        bsuuprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsuuprimerActionPerformed(evt);
            }
        });
        pfichec.add(bsuuprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 90, 30));

        pmodifier.setBackground(new java.awt.Color(51, 78, 172));
        pmodifier.setForeground(new java.awt.Color(255, 255, 255));
        pmodifier.setText("Modifier");
        pmodifier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pmodifierMouseClicked(evt);
            }
        });
        pmodifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pmodifierActionPerformed(evt);
            }
        });
        pfichec.add(pmodifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 80, 30));

        bajouter.setBackground(new java.awt.Color(51, 78, 172));
        bajouter.setForeground(new java.awt.Color(255, 255, 255));
        bajouter.setText("Ajouter");
        bajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bajouterActionPerformed(evt);
            }
        });
        pfichec.add(bajouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 80, 30));

        tvage.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tvage.setForeground(new java.awt.Color(255, 0, 0));
        tvage.setText("la valeur de l'age est incorrect");
        pfichec.add(tvage, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 53, -1, 20));

        penseignanat.add(pfichec, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 740, 190));

        jLabel6.setText("recherche par ");
        penseignanat.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, -1, -1));

        trecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trechercheActionPerformed(evt);
            }
        });
        trecherche.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                trechercheFocusGained(evt);
            }
        });
        penseignanat.add(trecherche, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 120, 30));

        brecherche.setBackground(new java.awt.Color(51, 78, 172));
        brecherche.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ihm/search_2_fill (1).png"))); // NOI18N
        brecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brechercheActionPerformed(evt);
            }
        });
        penseignanat.add(brecherche, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 20, -1, 30));

        jButton1.setBackground(new java.awt.Color(51, 78, 172));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ihm/refresh_3_fill.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        penseignanat.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 20, 50, 30));

        cmchoix.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "id ", "nom" }));
        cmchoix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmchoixActionPerformed(evt);
            }
        });
        penseignanat.add(cmchoix, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, -1, 30));

        tabens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabens.setGridColor(new java.awt.Color(255, 255, 255));
        tabens.setSelectionBackground(new java.awt.Color(51, 78, 172));
        tabens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabensMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabens);

        penseignanat.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 740, 260));

        jPanel1.setBackground(new java.awt.Color(196, 227, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(8, 31, 92));
        jLabel1.setText("GESTION DES CLIENTS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ihm/client.jpg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 70));

        penseignanat.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 70));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(penseignanat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(penseignanat, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bajouterActionPerformed
        boolean vide = false;
        boolean vage = true;
        // recuperer les donnees du formulaire
        String nom = tnom.getText();
        String prenom = tprenom.getText();
        int age;
        String sex = cmsex.getSelectedItem().toString();
        String adresse = tadresse.getText();
       

        if (nom.equals("") || prenom.equals("") || tage1.getText().equals("") || adresse.equals("")) {
            vide = true;
        }

        if (vide == false) {
             Pattern pattern = Pattern.compile("[^a-zA-Z]");
        Matcher matchernom = pattern.matcher(nom);
        Matcher matcherprenom = pattern.matcher(prenom);
         Pattern pattern2 = Pattern.compile("[^0-9]");
        Matcher matcherage = pattern2.matcher(tage1.getText());

            if (matchernom.find() || matcherprenom.find() || matcherage.find()) {

                JOptionPane.showMessageDialog(null, "la saisie n'est pas valide");
            } else {

                age = Integer.parseInt(tage1.getText());
                if (age > 100 || age <=0) {
                    vage = false;
                }
                if (vage) {
                    try {
                        ConnectClients ccl = new ConnectClients();
                        boolean clientExiste = false;
                        while (ccl.rs.next()) {
                            if (nom.equals(ccl.rs.getString("nom")) && prenom.equals(ccl.rs.getString("prenom"))) {
                                clientExiste = true;
                                break;
                            }
                        }
                        if (!clientExiste) {
                            Client cl = new Client();
                            cl.setNom(nom);
                            cl.setPrenom(prenom);
                            cl.setAge(age);
                            cl.setsex(sex);
                            cl.setAdresse(adresse);
                            stat = c.getCo().createStatement();
                            stat.executeUpdate("INSERT INTO clients(nom,prenom,age,sex,adresse) VALUES('"
                                    + cl.getNom() + "','" + cl.getPrenom() + "','" + cl.getAge() + "','" + cl.getsex() + "','" + cl.getAdresse() + "')");
                            JOptionPane.showMessageDialog(null, "Clients ajouter avec succes");
                            actualiser();
                            reinitialiser();

                        } else {
                            JOptionPane.showMessageDialog(null, "Le client existe déjà");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Clients.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                tvage.setVisible(true);
                }

            }

        } else {
            JOptionPane.showMessageDialog(null, "Vous devez remplir tous les champs");
        }
    }//GEN-LAST:event_bajouterActionPerformed

    private void tabensMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabensMouseClicked
        afficher(tabens.getSelectedRow());
        pmodifier.setVisible(true);
        bsuuprimer.setVisible(true);
    }//GEN-LAST:event_tabensMouseClicked

    private void bsuuprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsuuprimerActionPerformed
        if (JOptionPane.showConfirmDialog(this, "voulez vous vraiment supprimer ?", "suppression", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                stat = c.getCo().createStatement();
                stat.executeUpdate("DELETE FROM commandes_sm WHERE id_client='" + tabens.getValueAt(tabens.getSelectedRow(), 0) + "'");
                stat = c.getCo().createStatement();
                stat.executeUpdate("DELETE FROM mesures WHERE id_client='" + tabens.getValueAt(tabens.getSelectedRow(), 0) + "'");
                stat = c.getCo().createStatement();
                stat.executeUpdate("DELETE FROM clients WHERE id='" + tabens.getValueAt(tabens.getSelectedRow(), 0) + "'");
                JOptionPane.showMessageDialog(this, "suppression faite avec succes");
                actualiser();
                pmodifier.setVisible(false);
                bsuuprimer.setVisible(false);
                reinitialiser();
            } catch (SQLException ex) {
                Logger.getLogger(Clients.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_bsuuprimerActionPerformed

    private void trechercheFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_trechercheFocusGained
        dtm.setColumnCount(0);
        dtm.setRowCount(0);
        trecherche.setText(null);
        reinitialiser();
        actualiser();
        trecherche.requestFocus();

    }//GEN-LAST:event_trechercheFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        actualiser();
        reinitialiser();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pmodifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pmodifierActionPerformed

        if (JOptionPane.showConfirmDialog(this, "voullez vous vraiment modifier ?", "modification",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
           
        }
         boolean vide = false;
        boolean vage = true;
        // recuperer les donnees du formulaire
        String nom = tnom.getText();
        String prenom = tprenom.getText();
        int age;
        String sex = cmsex.getSelectedItem().toString();
        String adresse = tadresse.getText();
        

        if (nom.equals("") || prenom.equals("") || tage1.getText().equals("") || adresse.equals("")) {
            vide = true;
        }

        if (vide == false) {
            Pattern pattern = Pattern.compile("[^a-zA-Z]");
        Matcher matchernom = pattern.matcher(nom);
        Matcher matcherprenom = pattern.matcher(prenom);
         Pattern pattern2 = Pattern.compile("[^0-9]");
        Matcher matcherage = pattern2.matcher(tage1.getText());

            if (matchernom.find() || matcherprenom.find() || matcherage.find()) {

                JOptionPane.showMessageDialog(null, "la saisie n'est pas valide");
            } else {

                age = Integer.parseInt(tage1.getText());
                if (age > 100 || age <= 0) {
                    vage = false;
                }
                if (vage) {
                    try {
                prestate = c.getCo().prepareStatement("UPDATE clients SET nom=?,"
                        + "prenom=?,age=?,sex=?,adresse=? WHERE id=?");
                prestate.setString(1, tnom.getText());
                prestate.setString(2, tprenom.getText());
                prestate.setInt(3, Integer.parseInt(tage1.getText()));
                prestate.setString(4, cmsex.getSelectedItem().toString());
                prestate.setString(5, tadresse.getText());
                prestate.setInt(6, Integer.parseInt(tabens.getValueAt(tabens.getSelectedRow(), 0) + ""));
                prestate.execute();
                JOptionPane.showMessageDialog(this, "Modification faite avec succes");
                actualiser();
                reinitialiser();
                pmodifier.setVisible(false);
                bsuuprimer.setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(Clients.class.getName()).log(Level.SEVERE, null, ex);
            }
                }else{
                tvage.setVisible(true);
                }

            }

        } else {
            JOptionPane.showMessageDialog(null, "Vous devez remplir tous les champs");
        }
    }//GEN-LAST:event_pmodifierActionPerformed

    private void trechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trechercheActionPerformed

    private void brechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brechercheActionPerformed
        String s;
        s = cmchoix.getSelectedItem().toString();
        try {

            prestate = c.getCo().prepareStatement("SELECT * FROM clients WHERE " + s + "=?");
            if (s.equals("id")) {
                prestate.setInt(1, Integer.parseInt(trecherche.getText()));
            } else {
                prestate.setString(1, trecherche.getText().toUpperCase());
            }

            rs = prestate.executeQuery();
            dtm.setRowCount(0);
            while (rs.next()) {
                dtm.addRow(new Object[]{rs.getInt("id"), rs.getString("nom"), rs.getString("prenom"), rs.getInt("age"), rs.getString("sex"), rs.getString("adresse")});
            }
            tabens.setModel(dtm);
            if (dtm.getRowCount() != 0) {
                afficher(0);
            } else {
                actualiser();
                JOptionPane.showMessageDialog(this, "le clients n'existe pas");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Clients.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_brechercheActionPerformed

    private void cmchoixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmchoixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmchoixActionPerformed

    private void pmodifierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pmodifierMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_pmodifierMouseClicked

    private void tadresseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tadresseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tadresseActionPerformed

    private void tnomFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tnomFocusLost

        tnom.setText(tnom.getText().toUpperCase());
    }//GEN-LAST:event_tnomFocusLost

    private void tprenomFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tprenomFocusLost
        tprenom.setText((tprenom.getText().charAt(0) + "").toUpperCase()
                + tprenom.getText().substring(1).toLowerCase());
    }//GEN-LAST:event_tprenomFocusLost

    private void tage1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tage1FocusGained
        tvage.setVisible(false);
    }//GEN-LAST:event_tage1FocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton bajouter;
    private javax.swing.JButton brecherche;
    private javax.swing.JButton bsuuprimer;
    private javax.swing.JComboBox<String> cmchoix;
    public static javax.swing.JComboBox<String> cmsex;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel penseignanat;
    private javax.swing.JPanel pfichec;
    private javax.swing.JButton pmodifier;
    private javax.swing.JTable tabens;
    public static javax.swing.JTextField tadresse;
    public static javax.swing.JTextField tage1;
    public static javax.swing.JTextField tnom;
    public static javax.swing.JTextField tprenom;
    private javax.swing.JTextField trecherche;
    public static javax.swing.JLabel tvage;
    // End of variables declaration//GEN-END:variables
}
